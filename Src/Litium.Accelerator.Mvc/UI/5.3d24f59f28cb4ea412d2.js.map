{"version":3,"sources":["webpack:///./Scripts/constants.js","webpack:///./Scripts/Components/Cart.js","webpack:///./Scripts/Components/Checkout.PrivateCustomerInfo.js","webpack:///./Scripts/Components/Checkout.BusinessCustomerInfo.js","webpack:///./Scripts/Components/Checkout.DeliveryMethods.js","webpack:///./Scripts/Components/Checkout.PaymentMethods.js","webpack:///./Scripts/Components/Checkout.OrderNote.js","webpack:///./Scripts/Components/Checkout.OrderInfo.js","webpack:///./Scripts/Components/Payments/PaymentWidget.js","webpack:///./Scripts/Containers/Checkout.container.js"],"names":["window","__litium","Cart","props","state","editingQuantity","removingRow","rowSystemId","quantity","this","setState","previousState","Math","abs","showDeleteButton","currentQuantity","originalQuantity","updateOrderRowQuantity","then","onQuantityChange","undefined","className","translate","orderRows","order","key","src","image","alt","name","href","url","brand","campaignPrice","price","isFreeGift","type","min","maxLength","value","onChange","event","target","onClick","handleUpdateClick","totalPrice","onDeleteRequest","title","removeOrderRow","orderTotal","Component","CheckoutPrivateCustomerInfo","customerDetails","alternativeAddress","signUp","authenticated","onSignUpChange","setCountry","errors","input","cssClass","stateKey","id","autoComplete","placeholder","htmlFor","toLowerCase","data-error-for","country","disabled","constants","countries","text","checked","showAlternativeAddress","CheckoutBusinessCustomerInfo","companyAddresses","companyName","selectedCompanyAddressId","setSelectedCompanyAddress","selectedAddress","address","systemId","getCountry","addressCountry","zipCode","city","CheckoutDeliveryMethods","deliveryMethods","selectedId","method","formattedPrice","CheckoutPaymentMethods","paymentMethods","onCampaignCodeChange","onSubmitCampaignCode","CheckoutOrderNote","orderNote","CheckoutOrderInfo","cart","discount","deliveryCost","paymentCost","grandTotal","vat","scriptPattern","scriptFilePattern","PaymentWidget","responseString","renderWidget","paymentSession","WidgetCheckout","DynamicComponent","loader","args","extractScripts","executeScript","includeScript","domString","matches","html","scripts","scriptFiles","exec","replace","push","domId","scriptContent","script","document","createElement","appendChild","createTextNode","e","getElementById","srciptUrl","PureComponent","privateCustomerAdditionalDetailsSchema","object","shape","acceptTermsOfCondition","boolean","required","oneOf","selectedDeliveryMethod","string","privateCustomerAddressSchema","email","phoneNumber","mixed","notOneOf","lastName","firstName","privateCustomerAlternativeAddressSchema","businessCustomerDetailsSchema","CheckoutContainer","checkout","selectedPaymentMethod","payload","setPayment","onCustomerDetailsChange","isBusinessCustomer","notCustomerDetailFields","onError","error","addressPath","path","submitError","submitRequest","validate","submit","checkAltAddress","length","paymentWidget","checkoutMode","isChangeable","renderCartSection","displayCustomerDetails","renderCustomerDetailsSection","displayDeliveryMethods","renderDeliveryMethodsSection","renderPaymentMethodsSection","verify","note","setOrderNote","termsUrl","companyCustomers","isSubmitting","placeOrder","location","loginUrl","prevProps","result","redirectUrl","errorKeys","errorNode","querySelector","inputNode","parentElement","focus","scrollIntoView","behavior","privateCustomerInfoComponent","businessCustomerInfoComponent","both","setBusinessCustomer","setDelivery","setCampaignCode","submitCampaignCode","connect","dispatch","code","accept","orderId","setSignUp","submitDone","companyAddressId","propName","setCustomerDetails","setAlternativeAddress","rowId","reloadPayment"],"mappings":"0FAAeA,WAAOC,SAAtB,W,ySCoHeC,E,YAhHX,WAAYC,GAAO,0BACf,4BAAMA,KACDC,MAAQ,CACTC,gBAAiB,GACjBC,YAAa,IAJF,E,8DAQFC,EAAaC,GAC1BC,KAAKC,UAAS,SAAAC,GAAa,cACpBA,EADoB,CAEvBN,gBAAiB,OACVM,EAAcN,gBADN,OAEVE,EAAcK,KAAKC,IAAIL,Y,sCAKpBD,EAAaO,GACzBL,KAAKC,UAAS,SAAAC,GAAa,cACpBA,EADoB,CAEvBL,YAAa,OACNK,EAAcL,YADV,OAENC,EAAcO,W,wCAKTP,EAAaQ,EAAiBC,GAAkB,WAC1DD,GAAmBC,GAGvBP,KAAKN,MAAMc,uBAAuBV,EAAaQ,GAC1CG,MAAK,kBAAM,EAAKC,iBAAiBZ,OAAaa,Q,+BAG9C,eACoCX,KAAKL,MAAtCC,EADH,EACGA,gBAAiBC,EADpB,EACoBA,YAWzB,OAAO,yBAAKe,UAAU,2BACd,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,+BACX,yBAAKA,UAbO,sCAcZ,yBAAKA,UAbO,oCAauBC,YAAU,+BAC7C,yBAAKD,UAbO,oCAa0BC,YAAU,kCAChD,yBAAKD,UAbO,oCAauBC,YAAU,gCAE/Cb,KAAKN,MAAMoB,WAAa,MAAAd,KAAKN,MAAMoB,WAAX,QAAyB,SAAAC,GAAK,OACpD,yBAAKH,UAAU,iDAAiDI,IAAKD,EAAMjB,aACvE,yBAAKc,UAhBG,oEAiBJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,uBAAuBK,IAAKF,EAAMG,MAAOC,IAAKJ,EAAMK,QAEvE,yBAAKR,UAAU,6BACX,uBAAGS,KAAMN,EAAMO,KAAMP,EAAMK,MAC3B,0BAAMR,UAAU,6BAA8BG,EAAMQ,SAG5D,yBAAKX,UAxBG,sEAyBHG,EAAMS,cACH,kBAAC,WAAD,KACI,yBAAKZ,UAAU,iCAAiCG,EAAMS,eACtD,yBAAKZ,UAAU,iCAAf,KAAkDG,EAAMU,MAAxD,MAEJV,EAAMU,OAEd,yBAAKb,UA/BG,oCAgCFG,EAAMW,WAAc,6BAAMX,EAAMhB,UAC1B,2BAAOa,UAAU,uBAAuBe,KAAK,SAASC,IAAI,IAAIC,UAAW,EACzEC,MAAOlC,EAAgBmB,EAAMjB,cAAgBiB,EAAMhB,SACnDgC,SAAU,SAAAC,GAAK,OAAI,EAAKtB,iBAAiBK,EAAMjB,YAAakC,EAAMC,OAAOH,WAIrF,yBAAKlB,UAtCG,qCAuCDG,EAAMW,YACL,uBAAGd,UAAU,mCAAmCsB,QAAS,SAACF,GAAD,OAAW,EAAKG,kBAAkBpB,EAAMjB,YAAaF,EAAgBmB,EAAMjB,cAAgBiB,EAAMhB,SAAUgB,EAAMhB,cAGlL,yBAAKa,UAAS,qCA1CN,uEA2CHG,EAAMqB,YAEX,yBAAKxB,UA5CI,qCA6CHG,EAAMW,aAAe7B,EAAYkB,EAAMjB,cAAgB,uBAAGc,UAAU,kCAAkCsB,QAAS,kBAAM,EAAKG,gBAAgBtB,EAAMjB,aAAa,IAAOwC,MAAOzB,YAAU,qBACrLE,EAAMW,YAAc7B,EAAYkB,EAAMjB,cACpC,kBAAC,WAAD,KACI,uBAAGc,UAAU,kCAAkCsB,QAAS,kBAAM,EAAKxC,MAAM6C,eAAexB,EAAMjB,cAAcwC,MAAOzB,YAAU,gBAC7H,uBAAGD,UAAU,kCAAkCsB,QAAS,kBAAM,EAAKG,gBAAgBtB,EAAMjB,aAAa,IAAQwC,MAAOzB,YAAU,0BAMnJ,yBAAKD,UAAU,kDACX,yBAAKA,UAAU,WACX,wBAAIA,UAAU,eAAeC,YAAU,uBAAvC,KAAiEb,KAAKN,MAAM8C,oB,GAzGrFC,a,SCkGJC,EAjGqB,SAAChD,GAAU,UACyFA,EAA5HiD,uBADmC,MACjB,GADiB,IACyFjD,EAAtGkD,0BADa,MACQ,GADR,EACYC,EAA6EnD,EAA7EmD,OAAQC,EAAqEpD,EAArEoD,cAAef,EAAsDrC,EAAtDqC,SAAUgB,EAA4CrD,EAA5CqD,eAAgBC,EAA4BtD,EAA5BsD,WAD7D,EACyFtD,EAAhBuD,cADzE,MACkF,GADlF,EAErCC,EAAQ,SAACC,EAAUC,EAAUC,GAArB,gBAAyBC,EAAzB,uDAAwC,KAAMC,EAA9C,uDAA4D,KAAM5B,EAAlE,uDAAyE,OAAzE,OACV,yBAAKf,UAAWuC,GACZ,2BAAOvC,UAAU,cAAc4C,QAAO,gBAAKJ,EAAL,aAAiBC,IAAOxC,YAAU,yBAAD,OAA0BwC,EAAGI,gBAApG,KACA,2BAAO7C,UAAU,cAAcyC,GAAE,gBAAKD,EAAL,aAAiBC,GAAMjC,KAAI,gBAAKgC,EAAL,aAAiBC,GAAM1B,KAAMA,EACrFG,OAAQpC,EAAM0D,IAAa,IAAIC,IAAO,GAAIE,YAAaA,EAAaD,aAAcA,EAClFvB,SAAU,SAACC,GAAD,OAAWD,EAASqB,EAAUC,EAAIrB,EAAMC,OAAOH,UAC5DmB,EAAO,gBAAGG,EAAJ,aAAgBC,KACnB,0BAAMzC,UAAU,qDAAqD8C,iBAAA,gBAAmBN,EAAnB,aAA+BC,IAAOJ,EAAO,gBAAGG,EAAJ,aAAgBC,IAAM,MAInJ,OACI,yBAAKzC,UAAU,gCACX,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,2DAGnB,yBAAKA,UAAU,aACVsC,EAAM,kBAAmB,kBAAmB,YAAa,sBACzDA,EAAM,kBAAmB,kBAAmB,WAAY,uBACxDA,EAAM,mBAAoB,kBAAmB,UAC7CA,EAAM,mBAAoB,kBAAmB,UAAW,0BACxDA,EAAM,kBAAmB,kBAAmB,UAAW,uBACvDA,EAAM,kBAAmB,kBAAmB,OAAQ,0BACrD,yBAAKtC,UAAU,oBACX,2BAAOA,UAAU,cAAc4C,QAAQ,WAAW3C,YAAU,kCAC5D,4BAAQD,UAAU,cAAcyC,GAAG,UAAUvB,MAAOa,EAAgBgB,QAChE5B,SAAU,SAACC,GAAYD,EAAS,kBAAmB,UAAWC,EAAMC,OAAOH,OAAQC,EAAS,qBAAsB,UAAWC,EAAMC,OAAOH,OAAQkB,EAAWhB,EAAMC,OAAOH,SAC1K,4BAAQA,MAAM,GAAG8B,UAAQ,GAAE/C,YAAU,8CACpCgD,IAAUC,WAAa,MAAAD,IAAUC,WAAV,QAAwB,gBAAEC,EAAF,EAAEA,KAAMjC,EAAR,EAAQA,MAAR,OAC5C,4BAAQA,MAAOA,EAAOd,IAAG,kBAAac,IAAUiC,QAI3Db,EAAM,mBAAoB,kBAAmB,cAAe,iBAGrE,yBAAKtC,UAAU,6BACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,oBACX,2BACIA,UAAU,gCACVe,KAAK,WACL0B,GAAG,yBACHjC,KAAK,yBACL4C,QAASpB,EAAmBqB,yBAA0B,EACtDlC,SAAU,SAACC,GAAD,OAAWD,EAAS,qBAAsB,yBAA0BC,EAAMC,OAAO+B,YAE/F,2BAAOpD,UAAU,gCAAgC4C,QAAQ,0BACpD3C,YAAU,mDAItB+B,EAAmBqB,wBAA2B,yBAAKrD,UAAU,aACzDsC,EAAM,kBAAmB,qBAAsB,YAAa,uBAC5DA,EAAM,kBAAmB,qBAAsB,WAAY,wBAC3DA,EAAM,mBAAoB,qBAAsB,UAChDA,EAAM,mBAAoB,qBAAsB,UAAW,2BAC3DA,EAAM,kBAAmB,qBAAsB,UAAW,wBAC1DA,EAAM,kBAAmB,qBAAsB,OAAQ,2BACxD,yBAAKtC,UAAU,oBACX,2BAAOA,UAAU,cAAc4C,QAAQ,YAAY3C,YAAU,kCAC7D,4BAAQD,UAAU,cAAcyC,GAAG,WAAWvB,MAAOa,EAAgBgB,QACjE5B,SAAU,SAACC,GAAWD,EAAS,qBAAsB,UAAWC,EAAMC,OAAOH,OAAQC,EAAS,kBAAmB,UAAWC,EAAMC,OAAOH,OAAQkB,EAAWhB,EAAMC,OAAOH,SACzK,4BAAQA,MAAM,GAAG8B,UAAQ,GAAE/C,YAAU,8CACpCgD,IAAUC,WAAa,MAAAD,IAAUC,WAAV,QAAwB,gBAAEC,EAAF,EAAEA,KAAMjC,EAAR,EAAQA,MAAR,OAC5C,4BAAQA,MAAOA,EAAOd,IAAG,mBAAcc,IAAUiC,QAI5Db,EAAM,mBAAoB,qBAAsB,cAAe,kBAGxE,yBAAKtC,UAAU,oBACX,yBAAKA,UAAU,aACVsC,EAAM,kBAAmB,kBAAmB,QAAS,YAG5DJ,GAAkB,yBAAKlC,UAAU,oBAC/B,yBAAKA,UAAU,aACX,yBAAKA,UAAU,oBACX,2BAAOA,UAAU,gCAAgCe,KAAK,WAAW0B,GAAG,iBAChEW,QAASnB,EACTd,SAAU,SAACC,GAAD,OAAWe,EAAef,EAAMC,OAAO+B,YACrD,2BAAOpD,UAAU,gCAAgC4C,QAAQ,kBACpD3C,YAAU,8C,kBCpBxBqD,EApEsB,SAACxE,GAAU,MAC8FA,EAAlIyE,wBADoC,MACjB,GADiB,EACbC,EAA2G1E,EAA3G0E,YAAatB,EAA8FpD,EAA9FoD,cAAeuB,EAA+E3E,EAA/E2E,yBAA0BtC,EAAqDrC,EAArDqC,SAAUuC,EAA2C5E,EAA3C4E,0BADnD,EAC8F5E,EAAhBuD,cAD9E,MACuF,GADvF,EAEtCC,EAAQ,SAACC,EAAUC,EAAUC,GAArB,gBAAyBC,EAAzB,uDAAwC,KAAMC,EAA9C,uDAA4D,KAAM5B,EAAlE,uDAAyE,OAAzE,OACV,yBAAKf,UAAWuC,GACZ,2BAAOvC,UAAU,cAAc4C,QAAO,gBAAKJ,EAAL,aAAiBC,IAAOxC,YAAU,yBAAD,OAA0BwC,EAAGI,gBAApG,KACA,2BAAO7C,UAAU,cAAcgD,UAAWd,EAAeO,GAAE,gBAAKD,EAAL,aAAiBC,GAAMjC,KAAI,gBAAKgC,EAAL,aAAiBC,GAAM1B,KAAMA,EAC/GG,OAAQpC,EAAM0D,IAAa,IAAIC,IAAO,GAAIE,YAAaA,EAAaD,aAAcA,EAClFvB,SAAU,SAACC,GAAD,OAAWD,EAASqB,EAAUC,EAAIrB,EAAMC,OAAOH,UAC5DmB,EAAO,gBAAGG,EAAJ,aAAgBC,KACnB,0BAAMzC,UAAU,qDAAqD8C,iBAAA,gBAAmBN,EAAnB,aAA+BC,IAAOJ,EAAO,gBAAGG,EAAJ,aAAgBC,IAAM,MAI7IkB,EAAkBF,GAA4BF,EAAmB,IAAAA,GAAgB,KAAhBA,GAAsB,SAAAK,GAAO,OAAIA,EAAQC,WAAaJ,KAA4B,KACnJK,EAAa,SAACF,GAAY,MACtBG,EAAiBd,IAAUC,UAAY,MAAAD,IAAUC,WAAV,QAAyB,SAAAH,GAAO,OAAIA,EAAQ7B,QAAU0C,EAAQb,WAAW,KACtH,OAAOgB,EAAiBA,EAAeZ,KAAOS,EAAQb,SAE1D,OACI,yBAAK/C,UAAU,gCACX,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,oBAAoBC,YAAU,qCAEjD,yBAAKD,UAAU,aACVsC,EAAM,kBAAmB,kBAAmB,YAAa,sBACzDA,EAAM,kBAAmB,kBAAmB,WAAY,wBAE7D,yBAAKtC,UAAU,aACVsC,EAAM,mBAAoB,kBAAmB,cAAe,gBAEjE,yBAAKtC,UAAU,aACVsC,EAAM,kBAAmB,kBAAmB,QAAS,WAG9D,yBAAKtC,UAAU,6BACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,oBAAoBC,YAAU,kCAC7C,yBAAKD,UAAU,oBACX,2BAAOA,UAAU,cAAc4C,QAAQ,WAAvC,KACA,4BAAQ5C,UAAU,cAAckB,MAAOuC,GAA4B,GAAIT,UAAWd,EAC9Ef,SAAU,SAACC,GAAD,OAAWsC,EAA0BtC,EAAMC,OAAOH,MAAO,IAAAqC,GAAgB,KAAhBA,GAAsB,SAAAK,GAAO,OAAIA,EAAQC,WAAazC,EAAMC,OAAOH,SAAO6B,WAC7I,4BAAQ7B,MAAM,GAAG8B,UAAQ,GAAE/C,YAAU,qDACpCsD,GAAoB,IAAAA,GAAgB,KAAhBA,GAAqB,SAACK,GAAD,iBACtC,4BAAQ1C,MAAO0C,EAAQC,SAAUzD,IAAG,yBAAoBwD,EAAQC,WAAhE,4BAAgFD,EAAQA,QAAxF,cAAoGA,EAAQI,QAA5G,cAAwHJ,EAAQK,KAAhI,cAAyIH,EAAWF,SAG3JvB,EAAM,0BACH,0BAAMrC,UAAU,qDAAqD8C,iBAAe,4BAA4BT,EAAM,yBAA6B,MAI7JsB,GACE,yBAAK3D,UAAU,aACX,yBAAKA,UAAU,oBAAoBwD,GACnC,yBAAKxD,UAAU,oBAAoB2D,EAAgBC,SACnD,yBAAK5D,UAAU,oBACX,8BAAO2D,EAAgBK,SAD3B,IAEI,8BAAOL,EAAgBM,OAE3B,yBAAKjE,UAAU,oBAAoB8D,EAAWH,QC9CvDO,EAhBiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,WAAYjD,EAAhC,EAAgCA,SAAhC,OAC5B,6BAASnB,UAAU,gCACf,yBAAKA,UAAU,oBACTmE,GAAmB,IAAAA,GAAe,KAAfA,GAAoB,SAAAE,GAAM,OAC3C,2BAAOrE,UAAU,gBAAgBI,IAAKiE,EAAO5B,IACzC,2BAAO1B,KAAK,QAAQP,KAAK,kBAAkBR,UAAU,gCACjDkB,MAAOmD,EAAO5B,GAAIW,QAASiB,EAAO5B,KAAO2B,EAAYjD,SAAU,kBAAMA,EAASkD,EAAO5B,OACzF,0BAAMzC,UAAU,WACZ,+BAAKqE,EAAO7D,KAAZ,KADJ,MAC8B6D,EAAOC,uBCyB1CC,EAhCgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAgBJ,EAAnB,EAAmBA,WAAYjD,EAA/B,EAA+BA,SAAUsD,EAAzC,EAAyCA,qBAAsBC,EAA/D,EAA+DA,qBAAsBrC,EAArF,EAAqFA,OAArF,OAC3B,6BAASrC,UAAU,gCACf,yBAAKA,UAAU,oBACTwE,GAAkB,IAAAA,GAAc,KAAdA,GAAmB,SAAAH,GAAM,OACzC,2BAAOrE,UAAU,gBAAgBI,IAAKiE,EAAO5B,IACzC,2BAAO1B,KAAK,QAAQP,KAAK,iBAAiBR,UAAU,gCAChDkB,MAAOmD,EAAO5B,GAAIW,QAASiB,EAAO5B,KAAO2B,EAAYjD,SAAU,kBAAMA,EAASkD,EAAO5B,OACzF,0BAAMzC,UAAU,WACZ,+BAAKqE,EAAO7D,KAAZ,KADJ,MAC8B6D,EAAOC,oBAI7C,6BACA,2BAAOtE,UAAU,cAAc4C,QAAQ,iBAAiB3C,YAAU,0BAClE,yBAAKD,UAAU,iBACX,yBAAKA,UAAU,oBACX,2BAAOA,UAAU,cAAcyC,GAAG,gBAAgBE,YAAa1C,YAAU,yBACrEkB,SAAU,SAACC,GAAD,OAAWqD,EAAqBrD,EAAMC,OAAOH,UAC1DmB,GAAUA,EAAM,cACb,0BAAMrC,UAAU,qDAAqD8C,iBAAe,iBAAiBT,EAAM,aAAiB,KAGpI,yBAAKrC,UAAU,mDACX,4BAAQA,UAAU,iCAAiCsB,QAAS,kBAAMoD,MAC7DzE,YAAU,kCCjBpB0E,EAPW,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWzD,EAAd,EAAcA,SAAd,OACtB,yBAAKnB,UAAU,iEACVC,YAAU,0BACX,8BAAUD,UAAU,sCAAsCkB,MAAO0D,EAAWzD,SAAU,SAACC,GAAD,OAAWD,EAASC,EAAMC,OAAOH,YCQhH2D,EAXW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,yBAAK9E,UAAU,8DACX,6BAAMC,YAAU,wBAAhB,IAAyC,0BAAMD,UAAU,mCAAzD,IAAmG8E,EAAKlD,YACxG,6BAAM3B,YAAU,2BAAhB,IAA4C,0BAAMD,UAAU,mCAA5D,MAAwG8E,EAAKC,UAC7G,6BAAM9E,YAAU,+BAAhB,IAAgD,0BAAMD,UAAU,mCAAhE,IAA0G8E,EAAKE,cAC/G,6BAAM/E,YAAU,8BAAhB,IAA+C,0BAAMD,UAAU,mCAA/D,IAAyG8E,EAAKG,aAC9G,4BAAKhF,YAAU,6BAAf,IAA6C,0BAAMD,UAAU,mCAA7D,IAAuG8E,EAAKI,YAC5G,6BAAMjF,YAAU,sBAAhB,IAAuC,0BAAMD,UAAU,mCAAvD,IAAiG8E,EAAKK,O,0BCRxGC,EAAgB,wCAChBC,EAAoB,gCA6DXC,E,yIA1DF,MAC0BlG,KAAKN,MAAxByG,GADP,EACG9C,GADH,EACO8C,gBACZ,OAAOnG,KAAKoG,aAAaD,K,mCAGhBE,GACT,IAAMC,EAAiBC,YAAiB,CACpCC,OAAQ,kBAAM,iCAEZC,EAAO,CACTJ,iBACAK,eAAgB1G,KAAK0G,eACrBC,cAAe3G,KAAK2G,cACpBC,cAAe5G,KAAK4G,eAExB,OACI,kBAACN,EAAoBG,K,qCAIdI,GAGX,IAFA,IAAIC,EAASC,EAAOF,EACdG,EAAU,GAAIC,EAAc,GACmB,QAA7CH,EAAUd,EAAckB,KAAKL,KAAsB,OACvDE,EAAOA,EAAKI,QAAQL,EAAQ,GAAI,IAChCA,EAAQ,IAA4B,KAAtB,MAAAA,EAAQ,IAAR,SAA4BE,EAAQI,KAAKN,EAAQ,IAEnE,KAAyD,QAAjDA,EAAUb,EAAkBiB,KAAKL,KAAsB,OAC3DC,EAAQ,IAA4B,KAAtB,MAAAA,EAAQ,IAAR,SAA4BG,EAAYG,KAAKN,EAAQ,IAGvE,MAAO,CACHC,OACAC,UACAC,iB,oCAIMI,EAAOC,GACjB,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAO5F,KAAO,kBACd,IACI4F,EAAOG,YAAYF,SAASG,eAAeL,IAC7C,MAAMM,GAEJL,EAAOxD,KAAOuD,EAElBE,SAASK,eAAeR,GAAOK,YAAYH,K,oCAGjCF,EAAOS,GACjB,IAAMP,EAASC,SAASC,cAAc,UACtCF,EAAO5F,KAAO,kBACd4F,EAAOtG,IAAM6G,EACbN,SAASK,eAAeR,GAAOK,YAAYH,O,GAvDvBQ,iB,yBCkCtBC,EAAyCC,mBAASC,MAAM,CAC1DC,uBAAwBC,oBAAUC,SAASxH,YAAU,6BAA6ByH,MAAM,EAAC,GAAOzH,YAAU,6BAC1G0H,uBAAwBC,mBAASH,SAASxH,YAAU,0BAGlD4H,EAA+BR,mBAASC,MAAM,CAChDQ,MAAOF,mBAASH,SAASxH,YAAU,wBAAwB6H,MAAM7H,YAAU,qBAC3E8H,YAAaH,mBAASH,SAASxH,YAAU,wBACzC8C,QAASiF,kBAAQP,SAASxH,YAAU,wBAAwBgI,SAAS,CAAC,IAAKhI,YAAU,wBACrFgE,KAAM2D,mBAASH,SAASxH,YAAU,wBAClC+D,QAAS4D,mBAASH,SAASxH,YAAU,wBACrC2D,QAASgE,mBAASH,SAASxH,YAAU,wBACrCiI,SAAUN,mBAASH,SAASxH,YAAU,wBACtCkI,UAAWP,mBAASH,SAASxH,YAAU,0BAGrCmI,GAA0Cf,mBAASC,MAAM,CAC3DS,YAAaH,mBAASH,SAASxH,YAAU,wBACzC8C,QAASiF,kBAAQP,SAASxH,YAAU,wBAAwBgI,SAAS,CAAC,IAAKhI,YAAU,wBACrFgE,KAAM2D,mBAASH,SAASxH,YAAU,wBAClC+D,QAAS4D,mBAASH,SAASxH,YAAU,wBACrC2D,QAASgE,mBAASH,SAASxH,YAAU,wBACrCiI,SAAUN,mBAASH,SAASxH,YAAU,wBACtCkI,UAAWP,mBAASH,SAASxH,YAAU,0BAGrCoI,GAAgChB,mBAASC,MAAM,CACjDC,uBAAwBC,oBAAUC,SAASxH,YAAU,6BAA6ByH,MAAM,EAAC,GAAOzH,YAAU,6BAC1G0H,uBAAwBC,mBAASH,SAASxH,YAAU,wBACpD6H,MAAOF,mBAASH,SAASxH,YAAU,wBAAwB6H,MAAM7H,YAAU,qBAC3E8H,YAAaH,mBAASH,SAASxH,YAAU,wBACzCiI,SAAUN,mBAASH,SAASxH,YAAU,wBACtCkI,UAAWP,mBAASH,SAASxH,YAAU,wBACvCwD,yBAA0BmE,mBAASH,SAASxH,YAAU,0BAGpDqI,G,oJAEE,GAAKlJ,KAAKN,OAAUM,KAAKN,MAAMyJ,SAA/B,CADgB,IAKRC,EAA0BpJ,KAAKN,MAAMyJ,SAASE,QAA9CD,sBACRA,GAAyBpJ,KAAKN,MAAM4J,WAAWF,GAN/B,MASgCpJ,KAAKN,MAAMyJ,SAASE,QAA5D1G,EATQ,EASRA,gBAAiBC,EATT,EASSA,qBACvBD,IAAoBA,EAAgBgB,UAAYE,IAAUC,WAAaD,IAAUC,UAAU,IAAM9D,KAAKN,MAAM6J,wBAAwB,kBAAmB,UAAW1F,IAAUC,UAAU,GAAGhC,SACzLc,IAAuBA,EAAmBe,UAAYE,IAAUC,WAAaD,IAAUC,UAAU,IAAM9D,KAAKN,MAAM6J,wBAAwB,qBAAsB,UAAW1F,IAAUC,UAAU,GAAGhC,U,mCAG3L,WACDuH,EAAYrJ,KAAKN,MAAMyJ,SAAvBE,QAAF,EAEoDrJ,KAAKN,MAAMyJ,SAASE,QADxEG,EADA,EACAA,mBAAoBnF,EADpB,EACoBA,yBAA0B8D,EAD9C,EAC8CA,uBAC5CiB,EAFF,EAEEA,sBAAuBb,EAFzB,EAEyBA,uBACzBkB,EAA0B,CAAC,2BAA4B,wBAAyB,yBAA0B,0BAC1GC,EAAU,SAACC,GAA2C,MAApCC,EAAoC,uDAAtB,kBAClCD,EAAME,KAAO,IAAAJ,GAAuB,KAAvBA,EAAgCE,EAAME,OAAS,EAAIF,EAAME,KAAzD,gBAAmED,EAAnE,aAAkFD,EAAME,MACrG,EAAKnK,MAAMoK,YAAYH,IAG3B,GADA3J,KAAKN,MAAMqK,gBACPP,EACAP,GAA8Be,SAA9B,OACOX,EAAQ1G,gBADf,CAEI0B,2BACA+E,wBACAb,yBACAJ,4BAEC1H,MAAK,WACF,EAAKf,MAAMuK,YARnB,MAUWP,OACR,CACH,IAAMQ,EAAkBb,EAAQzG,mBAAmBqB,yBAA2BoF,EAAQzG,mBAAmBmG,WACrGM,EAAQzG,mBAAmBkG,UAC3BO,EAAQzG,mBAAmB4B,SAC3B6E,EAAQzG,mBAAmBgC,SAC3ByE,EAAQzG,mBAAmBiC,MAC3BwE,EAAQzG,mBAAmB+F,aAE/BF,EAA6BuB,SAA7B,OACOX,EAAQ1G,kBAEVlC,MAAK,WACF4I,EAAQpF,uBAAyBoF,EAAQzG,mBAAmBqB,uBACxDiG,EACAlB,GAAwCgB,SAAxC,OACOX,EAAQzG,qBAEVnC,MAAK,WACFuH,EAAuCgC,SAAS,CAC5CZ,wBACAb,yBACAJ,2BAEC1H,MAAK,WACF,EAAKf,MAAMuK,YANnB,MAQWP,MAZnB,OAcW,SAACC,GAAYD,EAAQC,EAAO,yBAEvC3B,EAAuCgC,SAAS,CAC5CZ,wBACAb,yBACAJ,2BAEC1H,MAAK,WACF,EAAKf,MAAMuK,YANnB,MAQWP,MA9BvB,MAiCWA,M,+BAIV,WACGhE,EAAS1F,KAAKN,MAAdgG,KACR,IAAKA,IAASA,EAAK5E,WAAa4E,EAAK5E,UAAUqJ,OAAS,EACpD,OACI,yBAAKvJ,UAAU,OACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,mBAAmBC,YAAU,0BAMrD,IAAEsI,EAAanJ,KAAKN,MAAlByJ,SACFE,EAAyBF,EAAzBE,QADA,EACyBF,EAAhBlG,cADT,MACkB,GADlB,EAEAuC,EAA6F6D,EAA7F7D,UAAW4E,EAAkFf,EAAlFe,cAAehF,EAAmEiE,EAAnEjE,eAAgBtC,EAAmDuG,EAAnDvG,cAAe0G,EAAoCH,EAApCG,mBAAoBa,EAAgBhB,EAAhBgB,aACnF,OACI,kBAAC,WAAD,OACOD,GAAiBA,EAAcE,eAAiBtK,KAAKuK,sBACrDH,GAAiBA,EAAcI,yBAA2BxK,KAAKyK,iCAC/DL,GAAiBA,EAAcM,yBAA2B1K,KAAK2K,+BAChEvF,GAAkBA,EAAe+E,OAAS,KAAOC,GAAiBA,EAAcE,eAAkBtK,KAAK4K,8BACzG,kBAAC,EAAD,OAAmBR,EAAnB,CAAkCS,OAAQ7K,KAAKN,MAAMmL,WAEnDT,GACE,kBAAC,WAAD,KACI,yBAAKxJ,UAAU,OACX,wBAAIA,UAAU,2BAA2BC,YAAU,0BAGvD,6BAASD,UAAU,uDACf,kBAAC,EAAD,OAAuB4E,EAAvB,CAAkCzD,SAAU,SAAC+I,GAAD,OAAU,EAAKpL,MAAMqL,aAAaD,OAC9E,kBAAC,EAAD,CAAmBpF,KAAMA,KAG7B,yBAAK9E,UAAU,OACX,2BAAOA,UAAU,gCAAgCe,KAAK,WAAW0B,GAAG,yBAAyBW,QAASqF,EAAQlB,uBAAwBpG,SAAU,SAACC,GAAD,OAAW,EAAKtC,MAAMyI,uBAAuBnG,EAAMC,OAAO+B,YAC1M,2BAAOpD,UAAU,gCAAgC4C,QAAQ,0BACpD3C,YAAU,yCADf,IACyD,uBAAGD,UAAU,iBAAiBS,KAAMgI,EAAQ2B,SAAU/I,OAAO,UAAUpB,YAAU,yBAEzIoC,EAAM,wBACH,0BAAMrC,UAAU,qDAAqD8C,iBAAe,0BAA0BT,EAAM,uBAA2B,KAIvJ,yBAAKrC,UAAU,OACTkC,IAAkB0G,GAAsBa,IAAiBxG,IAAUwG,aAAaY,iBAE3E,4BAAQtJ,KAAK,SAASf,UAAU,0BAA0BgD,SAAUuF,EAAS+B,aAAchJ,QAAS,kBAAM,EAAKiJ,eAAgBtK,YAAU,wBAD3I,4BAAQD,UAAU,0BAA0BsB,QAAS,kBAAMkJ,SAAS/J,KAAOgI,EAAQgC,WAAYxK,YAAU,mCAO1H,yBAAKD,UAAU,OACVqC,GAAUA,EAAM,SAAe,uBAAGrC,UAAU,8BAA8BqC,EAAM,QAAY,Q,yCAM1FqI,GACf,GAAItL,KAAKN,MAAMyJ,SAASoC,QAAUvL,KAAKN,MAAMyJ,SAASoC,OAAOC,YACzDjM,OAAO6L,SAAWpL,KAAKN,MAAMyJ,SAASoC,OAAOC,gBADjD,CAD0B,IAMlBrC,EAAanJ,KAAKN,MAAlByJ,SACR,GAAKA,EAAS+B,cAAiB/B,EAASlG,OAAxC,CAIA,IAAMwI,EAAY,IAAYtC,EAASlG,QACvC,GAAKwI,KAAaA,EAAUtB,OAAS,GAArC,CAIA,IAAMuB,EAAYlE,SAASmE,cAAT,2BAA2CF,EAAU,GAArD,OAClB,GAAKC,EAAL,CAIA,IAAME,EAAYF,EAAUG,cAAcF,cAAc,SACpDC,GACA,KAAW,kBAAMA,EAAUE,UAAS,KACpCF,EAAUG,eAAe,CAAEC,SAAU,YAErCN,EAAUK,eAAe,CAAEC,SAAU,iB,0CAKnC,MAAehM,KAAKN,MAAlByJ,SACFlG,cADA,MACS,GADT,EAGN,OACI,kBAAC,WAAD,KACI,yBAAKrC,UAAU,OACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,mBAAmBC,YAAU,qBAGnD,yBAAKD,UAAU,OACX,wBAAIA,UAAU,2BAA2BC,YAAU,yBAEvD,yBAAKD,UAAU,OACVqC,GAAUA,EAAM,MAAY,uBAAGrC,UAAU,8BAA8BqC,EAAM,KAAS,KAE3F,kBAAC,EAAD,OACOjD,KAAKN,MAAMgG,KADlB,CAEIlF,uBAAwBR,KAAKN,MAAMc,uBACnC+B,eAAgBvC,KAAKN,MAAM6C,qB,qDAMZ,aAC0EvC,KAAKN,MAAlGyJ,EADmB,EACnBA,SAAUI,EADS,EACTA,wBAAyBxG,EADhB,EACgBA,eAAgBuB,EADhC,EACgCA,0BAA2BtB,EAD3D,EAC2DA,WAChFqG,EAAyBF,EAAzBE,QAFqB,EAEIF,EAAhBlG,cAFY,MAEH,GAFG,EAGrBmB,EAC+CiF,EAD/CjF,YAAatB,EACkCuG,EADlCvG,cAAeH,EACmB0G,EADnB1G,gBAAiBC,EACEyG,EADFzG,mBAAoBuB,EAClBkF,EADkBlF,iBAAkBE,EACpCgF,EADoChF,yBACjFmF,EAA6CH,EAA7CG,mBAAoB3G,EAAyBwG,EAAzBxG,OAAQwH,EAAiBhB,EAAjBgB,aAC9B4B,EAA+B,kBAAC,EAAgC,CAAEtJ,kBAAiBC,qBAAoBE,gBAAef,SAAUwH,EAAyB1G,SAAQE,iBAAgBC,aAAYC,WAC7LiJ,EAAgC,kBAAC,EAAiC,CAAEvJ,kBAAiBwB,mBAAkBC,cAAatB,gBAAeuB,2BAA0BtC,SAAUwH,EAAyBjF,4BAA2BrB,WACjO,OAAKH,EAiBD0G,EAEI,kBAAC,WAAD,KACI,yBAAK5I,UAAU,OACX,wBAAIA,UAAU,2BAA2BC,YAAU,iCAEtDiC,GAAiBoJ,GAM1B,kBAAC,WAAD,KACI,yBAAKtL,UAAU,OACX,wBAAIA,UAAU,2BAA2BC,YAAU,iCAEtDoL,GA/BD,kBAAC,WAAD,KACI,yBAAKrL,UAAU,OACX,wBAAIA,UAAU,2BAA2BC,YAAU,gCACnD,kBAAC,WAAD,KACI,2BAAOD,UAAU,2BAA2BC,YAAU,2CAD1D,IAEI,uBAAGQ,KAAMgI,EAAQgC,SAAUzK,UAAU,kBAAkBC,YAAU,uCAFrE,KAGM2I,GAAsBa,IAAiBxG,IAAUwG,aAAa8B,MAAQ,uBAAGjK,QAAS,kBAAM,EAAKxC,MAAM0M,qBAAoB,IAAOxL,UAAU,kBAAkBC,YAAU,4CAEzK2I,GAAsBa,IAAiBxG,IAAUwG,aAAa8B,MAAQ,uBAAGjK,QAAS,kBAAM,EAAKxC,MAAM0M,qBAAoB,IAAQxL,UAAU,kBAAkBC,YAAU,4CAExK2I,GAAsBa,IAAiBxG,IAAUwG,aAAaY,kBAAoBgB,GAClFzC,GAAsBa,IAAiBxG,IAAUwG,aAAaY,mBAAqBiB,K,qDA0B3F,IAAE/C,EAAanJ,KAAKN,MAAlByJ,SACFE,EAAyBF,EAAzBE,QADA,EACyBF,EAAhBlG,cADT,MACkB,GADlB,EAEA8B,EAAoBsE,EAApBtE,gBAEN,OACI,kBAAC,WAAD,KACI,yBAAKnE,UAAU,OACX,wBAAIA,UAAU,2BAA2BC,YAAU,6BAEvD,kBAAC,EAAD,CAAyBkE,gBAAiBA,EAAiBC,WAAYqE,EAAQd,uBAAwBxG,SAAU/B,KAAKN,MAAM2M,cAC3HpJ,EAAM,wBACH,0BAAMrC,UAAU,sDAAsDqC,EAAM,uBAA2B,O,oDAO7G,IAAEkG,EAAanJ,KAAKN,MAAlByJ,SACFE,EAAyBF,EAAzBE,QADA,EACyBF,EAAhBlG,cADT,MACkB,GADlB,EAEAmC,EAAmBiE,EAAnBjE,eACN,OACI,kBAAC,WAAD,KACI,yBAAKxE,UAAU,OACX,wBAAIA,UAAU,2BAA2BC,YAAU,4BAEvD,kBAAC,EAAD,CAAwBuE,eAAgBA,EACpCJ,WAAYqE,EAAQD,sBACpBrH,SAAU/B,KAAKN,MAAM4J,WACrBrG,OAAQA,EACRoC,qBAAsBrF,KAAKN,MAAM4M,gBACjChH,qBAAsBtF,KAAKN,MAAM6M,qBACpCtJ,EAAM,uBACH,0BAAMrC,UAAU,sDAAsDqC,EAAM,sBAA0B,S,GArR1FR,aA0UjB+J,uBA9CS,SAAA7M,GAEpB,MAAO,CACH+F,KAFuB/F,EAAnB+F,KAGJyD,SAHuBxJ,EAAbwJ,aAOS,SAAAsD,GACvB,MAAO,CACHxC,OAAQ,kBAAMwC,EAASxC,gBACvBmC,oBAAqB,SAACtK,GAAD,OAAW2K,EAASL,YAAoBtK,KAC7DwK,gBAAiB,SAACI,GAAD,OAAUD,EAASH,YAAgBI,KACpD1J,WAAY,SAACyB,GAAD,OAAcgI,EAASzJ,YAAWyB,KAC9C4H,YAAa,SAAC5H,GAAD,OAAcgI,EAASJ,YAAY5H,KAChD6E,WAAY,SAAC7E,GAAD,OAAcgI,EAASnD,YAAW7E,KAC9CsG,aAAc,SAACD,GAAD,OAAU2B,EAAS1B,YAAaD,KAC9C3C,uBAAwB,SAACwE,GAAD,OAAYF,EAAStE,YAAuBwE,KACpE9B,OAAQ,SAACvJ,EAAKsL,EAASvD,GAAf,OAA2BoD,EAAS5B,YAAOvJ,EAAKsL,EAASvD,KACjEtG,eAAgB,SAACF,GAAD,OAAY4J,EAASI,YAAUhK,KAC/C0J,mBAAoB,kBAAME,EAASF,gBACnCxC,cAAe,kBAAM0C,EAAS1C,gBAC9BD,YAAa,SAACH,GACV8C,EAAS3C,YAAYH,IACrB8C,EAASK,YAAW,QAExBxI,0BAA2B,SAACyI,EAAkBpJ,GAC1C8I,EAASnI,YAA0ByI,IACnCN,EAASzJ,YAAWW,KAExB4F,wBAAyB,SAACnG,EAAU4J,EAAUlL,GAC1C,OAAQsB,GACJ,IAAK,kBACDqJ,EAASQ,YAAmBD,EAAUlL,IACtC,MACJ,IAAK,qBACD2K,EAASS,YAAsBF,EAAUlL,MAKrDtB,uBAAwB,SAAC2M,EAAOpN,GAAR,OAAqB0M,EAASjM,YAAuB2M,EAAOpN,IAAWU,MAAK,kBAAMgM,EAASW,mBACnH7K,eAAgB,SAAC4K,GAAD,OAAWV,EAASjM,YAAuB2M,EAAO,IAAI1M,MAAK,kBAAMgM,EAASW,sBAInFZ,CAA6CtD","file":"5.3d24f59f28cb4ea412d2.js","sourcesContent":["export default window.__litium.constants;","import React, { Component, Fragment } from 'react';\r\nimport { translate } from '../Services/translation';\r\n\r\nclass Cart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editingQuantity: {},\r\n            removingRow: {},\r\n        };\r\n    }\r\n\r\n    onQuantityChange(rowSystemId, quantity) {\r\n        this.setState(previousState => ({\r\n            ...previousState,\r\n            editingQuantity: {\r\n                ...previousState.editingQuantity,\r\n                [rowSystemId]: Math.abs(quantity), // The quantity should be a positive number\r\n            }\r\n        }));\r\n    }\r\n\r\n    onDeleteRequest(rowSystemId, showDeleteButton) {\r\n        this.setState(previousState => ({\r\n            ...previousState,\r\n            removingRow: {\r\n                ...previousState.removingRow,\r\n                [rowSystemId]: showDeleteButton,\r\n            }\r\n        }));\r\n    }\r\n\r\n    handleUpdateClick(rowSystemId, currentQuantity, originalQuantity) {\r\n        if (currentQuantity == originalQuantity) {\r\n            return;\r\n        }\r\n        this.props.updateOrderRowQuantity(rowSystemId, currentQuantity)\r\n            .then(() => this.onQuantityChange(rowSystemId, undefined));\r\n    }\r\n\r\n    render() {\r\n        const { editingQuantity, removingRow } = this.state;\r\n        const productHeaderClass  = \"columns small-12 medium-4 large-6\"; /* = productContentClass */\r\n        const priceHeaderClass    = \"columns small-3 medium-2 large-2\"; /* = priceContentClass */\r\n        const quantityHeaderClass = \"columns small-4 medium-3 large-2\"; /* = quantityInputClass + quantityActionClass  */\r\n        const totalHeaderClass    = \"columns small-5 medium-3 large-2\"; /* = totalContentClass + totalActionClass  */\r\n        const productContentClass = \"columns small-12 medium-4 large-6\" + \" checkout-cart__image-container\";\r\n        const priceContentClass   = \"columns small-3 medium-2 large-2\" + \" simple-table__cell--no-break-word\";\r\n        const quantityInputClass  = \"columns small-2 medium-2 large-1\";\r\n        const quantityActionClass = \"columns small-2 medium-1 large-1\";\r\n        const totalContentClass   = \"columns small-2 medium-1 large-1\" + \" simple-table__cell--no-break-word\";\r\n        const totalActionClass    =  \"columns small-3 medium-2 large-1\";\r\n        return <div className=\"row checkout__container\">\r\n                <div className=\"small-12 simple-table\">\r\n                    <div className=\"row small-unstack no-margin\">\r\n                        <div className={productHeaderClass}></div>\r\n                        <div className={priceHeaderClass}>{translate('checkout.cart.header.price')}</div>\r\n                        <div className={quantityHeaderClass}>{translate('checkout.cart.header.quantity')}</div>\r\n                        <div className={totalHeaderClass}>{translate('checkout.cart.header.total')}</div>\r\n                    </div>\r\n                    { this.props.orderRows && this.props.orderRows.map(order => (\r\n                        <div className=\"row small-unstack no-margin checkout-cart__row\" key={order.rowSystemId}>\r\n                            <div className={productContentClass}>\r\n                                <div className=\"checkout-cart__image-wrapper\">\r\n                                    <img className=\"checkout-cart__image\" src={order.image} alt={order.name} />\r\n                                </div>\r\n                                <div className=\"checkout-cart__image-info\">\r\n                                    <a href={order.url}>{order.name}</a>\r\n                                    <span className=\"checkout-cart__brand-name\" >{order.brand}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className={priceContentClass}>\r\n                                {order.campaignPrice ? (\r\n                                    <Fragment>\r\n                                        <div className='checkout-cart__campaign-price'>{order.campaignPrice}</div>\r\n                                        <div className='checkout-cart__original-price'> ({order.price})</div>\r\n                                    </Fragment>\r\n                                ) : order.price}\r\n                            </div>\r\n                            <div className={quantityInputClass}>\r\n                                { order.isFreeGift ? (<div>{order.quantity}</div>) : (\r\n                                        <input className=\"checkout-cart__input\" type=\"number\" min=\"1\" maxLength={3}\r\n                                        value={editingQuantity[order.rowSystemId] || order.quantity}\r\n                                        onChange={event => this.onQuantityChange(order.rowSystemId, event.target.value)} />)\r\n                                 }\r\n                             </div>\r\n                            \r\n                            <div className={quantityActionClass}>\r\n                                { !order.isFreeGift &&\r\n                                    <a className=\"table__icon table__icon--reorder\" onClick={(event) => this.handleUpdateClick(order.rowSystemId, editingQuantity[order.rowSystemId] || order.quantity, order.quantity)}></a>\r\n                                }\r\n                            </div>\r\n                            <div className={`checkout-cart__total-price ${totalContentClass}`}>\r\n                                {order.totalPrice}\r\n                            </div>\r\n                            <div className={totalActionClass}>\r\n                                {!order.isFreeGift && !removingRow[order.rowSystemId] && <a className=\"table__icon table__icon--delete\" onClick={() => this.onDeleteRequest(order.rowSystemId, true)} title={translate('general.remove')}></a>}\r\n                                {!order.isFreeGift && removingRow[order.rowSystemId] && (\r\n                                    <Fragment>\r\n                                        <a className=\"table__icon table__icon--accept\" onClick={() => this.props.removeOrderRow(order.rowSystemId)} title={translate('general.ok')}></a>\r\n                                        <a className=\"table__icon table__icon--cancel\" onClick={() => this.onDeleteRequest(order.rowSystemId, false)} title={translate('general.cancel')}></a>\r\n                                    </Fragment>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    <div className=\"row small-unstack no-margin checkout-cart__row\">\r\n                        <div className=\"columns\">\r\n                            <h3 className=\"text--right\">{translate('checkout.cart.total')}: {this.props.orderTotal}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>;\r\n    }\r\n}\r\n\r\nexport default Cart;","import React from 'react';\r\nimport constants from '../constants';\r\nimport { translate } from '../Services/translation';\r\n\r\nconst CheckoutPrivateCustomerInfo = (props) => {\r\n    const { customerDetails = {}, alternativeAddress = {}, signUp, authenticated, onChange, onSignUpChange, setCountry, errors = {} } = props;\r\n    const input = (cssClass, stateKey, id, autoComplete = 'on', placeholder = null, type = 'text') => (\r\n        <div className={cssClass}>\r\n            <label className=\"form__label\" htmlFor={`${stateKey}-${id}`}>{translate(`checkout.customerinfo.${id.toLowerCase()}`)}&#8203;</label>\r\n            <input className=\"form__input\" id={`${stateKey}-${id}`} name={`${stateKey}-${id}`} type={type}\r\n                value={(props[stateKey] || {})[id] || ''} placeholder={placeholder} autoComplete={autoComplete}\r\n                onChange={(event) => onChange(stateKey, id, event.target.value)}/>\r\n            {errors[`${stateKey}-${id}`] &&\r\n                <span className=\"form__validator--error form__validator--top-narrow\" data-error-for={`${stateKey}-${id}`}>{errors[`${stateKey}-${id}`][0]}</span>\r\n            }\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"row checkout-info__container\">\r\n            <div className=\"small-12 medium-6 columns\">\r\n                <div className=\"row-inner\">\r\n                    <div className=\"small-12 columns checkout-info__placeholder-container\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"row-inner\">\r\n                    {input('small-6 columns', 'customerDetails', 'firstName', 'billing given-name')}\r\n                    {input('small-6 columns', 'customerDetails', 'lastName', 'billing family-name')}\r\n                    {input('small-12 columns', 'customerDetails', 'careOf')}\r\n                    {input('small-12 columns', 'customerDetails', 'address', 'billing street-address')}\r\n                    {input('small-6 columns', 'customerDetails', 'zipCode', 'billing postal-code')}\r\n                    {input('small-6 columns', 'customerDetails', 'city', 'billing address-level2')}\r\n                    <div className=\"small-12 columns\">\r\n                        <label className=\"form__label\" htmlFor=\"country\">{translate('checkout.customerinfo.country')}</label>\r\n                        <select className=\"form__input\" id=\"country\" value={customerDetails.country}\r\n                            onChange={(event) => { onChange('customerDetails', 'country', event.target.value); onChange('alternativeAddress', 'country', event.target.value); setCountry(event.target.value) }}>\r\n                            <option value='' disabled>{translate('checkout.customerinfo.country.placeholder')}</option>\r\n                            {constants.countries && constants.countries.map(({text, value,}) =>\r\n                                <option value={value} key={`country-${value}`}>{text}</option>\r\n                            )}\r\n                        </select>\r\n                    </div>\r\n                    {input('small-12 columns', 'customerDetails', 'phoneNumber', 'billing tel')}\r\n                </div>\r\n            </div>\r\n            <div className=\"small-12 medium-6 columns\">\r\n                <div className=\"row-inner\">\r\n                    <div className=\"small-12 columns\">\r\n                        <input \r\n                            className=\"checkout-info__checkbox-input\"\r\n                            type=\"checkbox\"\r\n                            id=\"showAlternativeAddress\"\r\n                            name=\"showAlternativeAddress\"\r\n                            checked={alternativeAddress.showAlternativeAddress || false}\r\n                            onChange={(event) => onChange('alternativeAddress', 'showAlternativeAddress', event.target.checked)} \r\n                        />\r\n                        <label className=\"checkout-info__checkbox-label\" htmlFor=\"showAlternativeAddress\">\r\n                            {translate('checkout.customerinfo.showAlternativeAddress')}\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                {alternativeAddress.showAlternativeAddress && (<div className=\"row-inner\">\r\n                    {input('small-6 columns', 'alternativeAddress', 'firstName', 'shipping given-name')}\r\n                    {input('small-6 columns', 'alternativeAddress', 'lastName', 'shipping family-name')}\r\n                    {input('small-12 columns', 'alternativeAddress', 'careOf')}\r\n                    {input('small-12 columns', 'alternativeAddress', 'address', 'shipping street-address')}\r\n                    {input('small-6 columns', 'alternativeAddress', 'zipCode', 'shipping postal-code')}\r\n                    {input('small-6 columns', 'alternativeAddress', 'city', 'shipping address-level2')}\r\n                    <div className=\"small-12 columns\">\r\n                        <label className=\"form__label\" htmlFor=\"country2\">{translate('checkout.customerinfo.country')}</label>\r\n                        <select className=\"form__input\" id=\"country2\" value={customerDetails.country}\r\n                            onChange={(event) =>{ onChange('alternativeAddress', 'country', event.target.value); onChange('customerDetails', 'country', event.target.value); setCountry(event.target.value) }}>\r\n                            <option value='' disabled>{translate('checkout.customerinfo.country.placeholder')}</option>\r\n                            {constants.countries && constants.countries.map(({text, value}) =>\r\n                                <option value={value} key={`country2-${value}`}>{text}</option>\r\n                            )}\r\n                        </select>\r\n                    </div>\r\n                    {input('small-12 columns', 'alternativeAddress', 'phoneNumber', 'shipping tel')}\r\n                </div>)}\r\n            </div>\r\n            <div className=\"small-12 columns\">\r\n                <div className=\"row-inner\">\r\n                    {input('small-6 columns', 'customerDetails', 'email', 'email')}\r\n                </div>\r\n            </div>\r\n            {!authenticated && (<div className=\"small-12 columns\">\r\n                <div className=\"row-inner\">\r\n                    <div className=\"small-12 columns\">\r\n                        <input className=\"checkout-info__checkbox-input\" type=\"checkbox\" id=\"signupandlogin\" \r\n                            checked={signUp}\r\n                            onChange={(event) => onSignUpChange(event.target.checked)}/>\r\n                        <label className=\"checkout-info__checkbox-label\" htmlFor=\"signupandlogin\">\r\n                            {translate('checkout.customerinfo.signupandlogin')}\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutPrivateCustomerInfo;","import React from 'react';\r\nimport { translate } from '../Services/translation';\r\nimport constants from '../constants';\r\n\r\nconst CheckoutBusinessCustomerInfo = (props) => {\r\n    const { companyAddresses = [], companyName, authenticated, selectedCompanyAddressId, onChange, setSelectedCompanyAddress, errors = {} } = props;\r\n    const input = (cssClass, stateKey, id, autoComplete = null, placeholder = null, type = 'text') => (\r\n        <div className={cssClass}>\r\n            <label className=\"form__label\" htmlFor={`${stateKey}-${id}`}>{translate(`checkout.customerinfo.${id.toLowerCase()}`)}&#8203;</label>\r\n            <input className=\"form__input\" disabled={!authenticated} id={`${stateKey}-${id}`} name={`${stateKey}-${id}`} type={type}\r\n                value={(props[stateKey] || {})[id] || ''} placeholder={placeholder} autoComplete={autoComplete}\r\n                onChange={(event) => onChange(stateKey, id, event.target.value)}/>\r\n            {errors[`${stateKey}-${id}`] &&\r\n                <span className=\"form__validator--error form__validator--top-narrow\" data-error-for={`${stateKey}-${id}`}>{errors[`${stateKey}-${id}`][0]}</span>\r\n            }\r\n        </div>\r\n    );\r\n    const selectedAddress = selectedCompanyAddressId && companyAddresses ? companyAddresses.find(address => address.systemId === selectedCompanyAddressId) : null;\r\n    const getCountry = (address) => {\r\n        const addressCountry = constants.countries ? constants.countries.find(country => country.value === address.country) : null;\r\n        return addressCountry ? addressCountry.text : address.country;\r\n    };\r\n    return (\r\n        <div className=\"row checkout-info__container\">\r\n            <div className=\"small-12 medium-6 columns\">\r\n                <div className=\"row-inner\">\r\n                    <div className=\"small-12 columns\">{translate('checkout.customerinfo.reference')}</div>\r\n                </div>\r\n                <div className=\"row-inner\">\r\n                    {input('small-6 columns', 'customerDetails', 'firstName', 'billing given-name')}\r\n                    {input('small-6 columns', 'customerDetails', 'lastName', 'billing family-name')}\r\n                </div>\r\n                <div className=\"row-inner\">\r\n                    {input('small-12 columns', 'customerDetails', 'phoneNumber', 'billing tel')}\r\n                </div>\r\n                <div className=\"row-inner\">\r\n                    {input('small-6 columns', 'customerDetails', 'email', 'email')}\r\n                </div>\r\n            </div>\r\n            <div className=\"small-12 medium-6 columns\">\r\n                <div className=\"row-inner\">\r\n                    <div className=\"small-12 columns\">{translate('checkout.customerinfo.address')}</div>\r\n                    <div className=\"small-12 columns\">\r\n                        <label className=\"form__label\" htmlFor=\"address\">&#8203;</label>\r\n                        <select className=\"form__input\" value={selectedCompanyAddressId || ''} disabled={!authenticated}\r\n                            onChange={(event) => setSelectedCompanyAddress(event.target.value, companyAddresses.find(address => address.systemId === event.target.value).country)}>\r\n                            <option value='' disabled>{translate('checkout.customerinfo.companyaddress.placeholder')}</option>\r\n                            {companyAddresses && companyAddresses.map((address) =>\r\n                                <option value={address.systemId} key={`companyAddress-${address.systemId}`}>{`${address.address}, ${address.zipCode}, ${address.city}, ${getCountry(address)}`}</option>\r\n                            )}\r\n                        </select>\r\n                        {errors['selectedCompanyAddressId'] &&\r\n                            <span className=\"form__validator--error form__validator--top-narrow\" data-error-for='selectedCompanyAddressId'>{errors['selectedCompanyAddressId'][0]}</span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                { selectedAddress &&\r\n                    <div className=\"row-inner\">\r\n                        <div className=\"small-12 columns\">{companyName}</div>\r\n                        <div className=\"small-12 columns\">{selectedAddress.address}</div>\r\n                        <div className=\"small-12 columns\">\r\n                            <span>{selectedAddress.zipCode}</span>&nbsp;\r\n                            <span>{selectedAddress.city}</span>\r\n                        </div>\r\n                        <div className=\"small-12 columns\">{getCountry(selectedAddress)}</div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutBusinessCustomerInfo;","import React from 'react';\r\n\r\nconst CheckoutDeliveryMethods = ({ deliveryMethods, selectedId, onChange }) => (\r\n    <section className=\"row checkout-info__container\">\r\n        <div className=\"columns small-12\">\r\n            { deliveryMethods && deliveryMethods.map(method => (\r\n                <label className=\"row no-margin\" key={method.id}>\r\n                    <input type=\"radio\" name=\"deliveryMethods\" className=\"checkout-info__checkbox-radio\"\r\n                        value={method.id} checked={method.id === selectedId} onChange={() => onChange(method.id)} />\r\n                    <span className=\"columns\">\r\n                        <b> {method.name} </b> - {method.formattedPrice}\r\n                    </span>\r\n                </label>\r\n            ))}\r\n        </div>\r\n    </section>\r\n)\r\n\r\nexport default CheckoutDeliveryMethods;","import React from 'react';\r\nimport { translate } from '../Services/translation';\r\n\r\nconst CheckoutPaymentMethods = ({ paymentMethods, selectedId, onChange, onCampaignCodeChange, onSubmitCampaignCode, errors }) => (\r\n    <section className=\"row checkout-info__container\">\r\n        <div className=\"columns small-12\">\r\n            { paymentMethods && paymentMethods.map(method => (\r\n                <label className=\"row no-margin\" key={method.id}>\r\n                    <input type=\"radio\" name=\"paymentMethods\" className=\"checkout-info__checkbox-radio\"\r\n                        value={method.id} checked={method.id === selectedId} onChange={() => onChange(method.id)} />\r\n                    <span className=\"columns\">\r\n                        <b> {method.name} </b> - {method.formattedPrice}\r\n                    </span>\r\n                </label>\r\n            )) }\r\n            <br/>\r\n            <label className=\"form__label\" htmlFor=\"campaign-code\">{translate('checkout.campaigncode')}</label>\r\n            <div className=\"row no-margin\">\r\n                <div className=\"small-6 medium-4\">\r\n                    <input className=\"form__input\" id=\"campaign-code\" placeholder={translate('checkout.campaigncode')} \r\n                        onChange={(event) => onCampaignCodeChange(event.target.value)} />\r\n                    {errors && errors['campaignCode'] &&\r\n                        <span className=\"form__validator--error form__validator--top-narrow\" data-error-for=\"campaign-code\">{errors['campaignCode'][0]}</span>\r\n                    }\r\n                </div>\r\n                <div className=\"small-5 small-offset-1 medium-4 medium-offset-1\">\r\n                    <button className=\"checkout-info__campaign-button\" onClick={() => onSubmitCampaignCode()}>\r\n                        {translate('checkout.usecampaigncode')}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n)\r\n\r\nexport default CheckoutPaymentMethods;","import React from 'react';\r\nimport { translate } from '../Services/translation';\r\n\r\nconst CheckoutOrderNote = ({ orderNote, onChange }) => (\r\n    <div className=\"columns small-12 medium-6 checkout-info__summary--full-height\">\r\n        {translate('checkout.order.message')}\r\n        <textarea className=\"form__input checkout-info__messages\" value={orderNote} onChange={(event) => onChange(event.target.value)}></textarea>\r\n    </div>\r\n)\r\n\r\nexport default CheckoutOrderNote;","import React from 'react';\r\nimport { translate } from '../Services/translation';\r\n\r\nconst CheckoutOrderInfo = ({ cart }) => (\r\n    <div className=\"columns small-12 medium-6 checkout-info__summary--full-row\">\r\n        <div>{translate('checkout.order.total')} <span className=\"checkout-info__summary--expand\"></span> {cart.orderTotal}</div>\r\n        <div>{translate('checkout.order.discount')} <span className=\"checkout-info__summary--expand\"></span> - {cart.discount}</div>\r\n        <div>{translate('checkout.order.deliverycost')} <span className=\"checkout-info__summary--expand\"></span> {cart.deliveryCost}</div>\r\n        <div>{translate('checkout.order.paymentcost')} <span className=\"checkout-info__summary--expand\"></span> {cart.paymentCost}</div>\r\n        <h3>{translate('checkout.order.grandTotal')} <span className=\"checkout-info__summary--expand\"></span> {cart.grandTotal}</h3>\r\n        <div>{translate('checkout.order.vat')} <span className=\"checkout-info__summary--expand\"></span> {cart.vat}</div>\r\n    </div>\r\n)\r\n\r\nexport default CheckoutOrderInfo;","import React, { PureComponent } from 'react';\r\nimport DynamicComponent from '../DynamicComponent';\r\nconst scriptPattern = /<script\\b[^>]*>([\\s\\S]*?)<\\/script>/gi;\r\nconst scriptFilePattern = /<script.*?src=[\"'](.*?)[\"']/gi;\r\n\r\nclass PaymentWidget extends PureComponent {\r\n    render() {\r\n        const { id, responseString } = this.props;\r\n        return this.renderWidget(responseString);\r\n    }\r\n\r\n    renderWidget(paymentSession) {\r\n        const WidgetCheckout = DynamicComponent({\r\n            loader: () => import('./CheckoutWidget')\r\n        });\r\n        const args = { \r\n            paymentSession,\r\n            extractScripts: this.extractScripts,\r\n            executeScript: this.executeScript,\r\n            includeScript: this.includeScript\r\n        };\r\n        return (\r\n            <WidgetCheckout { ...args } />\r\n        );\r\n    }\r\n\r\n    extractScripts(domString) {\r\n        let matches, html = domString;\r\n        const scripts = [], scriptFiles = [];\r\n        while ((matches = scriptPattern.exec(domString)) !== null) {\r\n            html = html.replace(matches[0], '');\r\n            matches[1] && matches[1].trim() !== '' && scripts.push(matches[1]);\r\n        }\r\n        while ((matches = scriptFilePattern.exec(domString)) !== null) {\r\n            matches[1] && matches[1].trim() !== '' && scriptFiles.push(matches[1]);\r\n        }\r\n        \r\n        return {\r\n            html,\r\n            scripts,\r\n            scriptFiles,\r\n        };\r\n    }\r\n\r\n    executeScript(domId, scriptContent) {\r\n        const script = document.createElement(\"script\");\r\n        script.type = \"text/javascript\";\r\n        try {\r\n            script.appendChild(document.createTextNode(scriptContent));      \r\n        } catch(e) {\r\n            // to support IE\r\n            script.text = scriptContent;\r\n        }\r\n        document.getElementById(domId).appendChild(script);\r\n    }\r\n\r\n    includeScript(domId, srciptUrl) {\r\n        const script = document.createElement(\"script\");\r\n        script.type = \"text/javascript\";\r\n        script.src = srciptUrl;\r\n        document.getElementById(domId).appendChild(script);\r\n    }\r\n}\r\n\r\nexport default PaymentWidget;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Cart from '../Components/Cart';\r\nimport CheckoutPrivateCustomerInfo from '../Components/Checkout.PrivateCustomerInfo';\r\nimport CheckoutBusinessCustomerInfo from '../Components/Checkout.BusinessCustomerInfo';\r\nimport CheckoutDeliveryMethods from '../Components/Checkout.DeliveryMethods';\r\nimport CheckoutPaymentMethods from '../Components/Checkout.PaymentMethods';\r\nimport CheckoutOrderNote from '../Components/Checkout.OrderNote';\r\nimport CheckoutOrderInfo from '../Components/Checkout.OrderInfo';\r\nimport PaymentWidget from '../Components/Payments/PaymentWidget';\r\n\r\nimport constants from '../constants';\r\n\r\nimport {\r\n    acceptTermsOfCondition,\r\n    setBusinessCustomer,\r\n    setCampaignCode,\r\n    setCountry,\r\n    setDelivery,\r\n    setPayment,\r\n    setOrderNote,\r\n    submit,\r\n    verify,\r\n    setCustomerDetails,\r\n    setAlternativeAddress,\r\n    setSignUp,\r\n    setSelectedCompanyAddress,\r\n    submitError,\r\n    reloadPayment,\r\n    submitCampaignCode,\r\n    submitRequest,\r\n    submitDone,\r\n} from '../Actions/Checkout.action';\r\nimport { update as updateOrderRowQuantity } from '../Actions/Cart.action';\r\n\r\nimport { translate } from '../Services/translation';\r\nimport { string, object, boolean, mixed } from 'yup';\r\n\r\nconst privateCustomerAdditionalDetailsSchema = object().shape({\r\n    acceptTermsOfCondition: boolean().required(translate(`validation.checkrequired`)).oneOf([true], translate(`validation.checkrequired`)),\r\n    selectedDeliveryMethod: string().required(translate(`validation.required`)),\r\n});\r\n\r\nconst privateCustomerAddressSchema = object().shape({\r\n    email: string().required(translate(`validation.required`)).email(translate(`validation.email`)),\r\n    phoneNumber: string().required(translate(`validation.required`)),\r\n    country: mixed().required(translate(`validation.required`)).notOneOf([''], translate('validation.required')),\r\n    city: string().required(translate(`validation.required`)),\r\n    zipCode: string().required(translate(`validation.required`)),\r\n    address: string().required(translate(`validation.required`)),\r\n    lastName: string().required(translate(`validation.required`)),\r\n    firstName: string().required(translate(`validation.required`)),\r\n});\r\n\r\nconst privateCustomerAlternativeAddressSchema = object().shape({\r\n    phoneNumber: string().required(translate(`validation.required`)),\r\n    country: mixed().required(translate(`validation.required`)).notOneOf([''], translate('validation.required')),\r\n    city: string().required(translate(`validation.required`)),\r\n    zipCode: string().required(translate(`validation.required`)),\r\n    address: string().required(translate(`validation.required`)),\r\n    lastName: string().required(translate(`validation.required`)),\r\n    firstName: string().required(translate(`validation.required`)),\r\n});\r\n\r\nconst businessCustomerDetailsSchema = object().shape({\r\n    acceptTermsOfCondition: boolean().required(translate(`validation.checkrequired`)).oneOf([true], translate(`validation.checkrequired`)),\r\n    selectedDeliveryMethod: string().required(translate(`validation.required`)),\r\n    email: string().required(translate(`validation.required`)).email(translate(`validation.email`)),\r\n    phoneNumber: string().required(translate(`validation.required`)),\r\n    lastName: string().required(translate(`validation.required`)),\r\n    firstName: string().required(translate(`validation.required`)),\r\n    selectedCompanyAddressId: string().required(translate(`validation.required`)),\r\n});\r\n\r\nclass CheckoutContainer extends Component {\r\n    componentDidMount() {\r\n        if (!this.props || !this.props.checkout) {\r\n            return;\r\n        }\r\n        // set selected value for payment method on load.\r\n        const { selectedPaymentMethod } = this.props.checkout.payload;\r\n        selectedPaymentMethod && this.props.setPayment(selectedPaymentMethod);\r\n\r\n        // fill default select value to the state\r\n        const { customerDetails, alternativeAddress } = this.props.checkout.payload;\r\n        (!customerDetails || !customerDetails.country) && constants.countries && constants.countries[0] && this.props.onCustomerDetailsChange('customerDetails', 'country', constants.countries[0].value);\r\n        (!alternativeAddress || !alternativeAddress.country) && constants.countries && constants.countries[0] && this.props.onCustomerDetailsChange('alternativeAddress', 'country', constants.countries[0].value);\r\n    }\r\n\r\n    placeOrder() {\r\n        const { payload } = this.props.checkout,\r\n            { isBusinessCustomer, selectedCompanyAddressId, acceptTermsOfCondition,\r\n                selectedPaymentMethod, selectedDeliveryMethod } = this.props.checkout.payload;\r\n        const notCustomerDetailFields = ['selectedCompanyAddressId', 'selectedPaymentMethod', 'selectedDeliveryMethod', 'acceptTermsOfCondition'];\r\n        const onError = (error, addressPath = 'customerDetails') => {\r\n            error.path = notCustomerDetailFields.indexOf(error.path) >= 0 ? error.path : `${addressPath}-${error.path}`;\r\n            this.props.submitError(error)\r\n        };\r\n        this.props.submitRequest();\r\n        if (isBusinessCustomer) {\r\n            businessCustomerDetailsSchema.validate({\r\n                ...payload.customerDetails,\r\n                selectedCompanyAddressId,\r\n                selectedPaymentMethod,\r\n                selectedDeliveryMethod,\r\n                acceptTermsOfCondition\r\n            })\r\n                .then(() => {\r\n                    this.props.submit();\r\n                })\r\n                .catch(onError);\r\n        } else {\r\n            const checkAltAddress = payload.alternativeAddress.showAlternativeAddress && (payload.alternativeAddress.firstName ||\r\n                payload.alternativeAddress.lastName ||\r\n                payload.alternativeAddress.address ||\r\n                payload.alternativeAddress.zipCode ||\r\n                payload.alternativeAddress.city ||\r\n                payload.alternativeAddress.phoneNumber);\r\n\r\n            privateCustomerAddressSchema.validate({\r\n                ...payload.customerDetails\r\n            })\r\n                .then(() => {\r\n                    payload.showAlternativeAddress = payload.alternativeAddress.showAlternativeAddress;\r\n                    if (checkAltAddress) {\r\n                        privateCustomerAlternativeAddressSchema.validate({\r\n                            ...payload.alternativeAddress\r\n                        })\r\n                            .then(() => {\r\n                                privateCustomerAdditionalDetailsSchema.validate({\r\n                                    selectedPaymentMethod,\r\n                                    selectedDeliveryMethod,\r\n                                    acceptTermsOfCondition\r\n                                })\r\n                                    .then(() => {\r\n                                        this.props.submit();\r\n                                    })\r\n                                    .catch(onError);\r\n                            })\r\n                            .catch((error) => { onError(error, 'alternativeAddress') })\r\n                    } else {\r\n                        privateCustomerAdditionalDetailsSchema.validate({\r\n                            selectedPaymentMethod,\r\n                            selectedDeliveryMethod,\r\n                            acceptTermsOfCondition\r\n                        })\r\n                            .then(() => {\r\n                                this.props.submit();\r\n                            })\r\n                            .catch(onError);\r\n                    }\r\n                })\r\n                .catch(onError);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { cart } = this.props;\r\n        if (!cart || !cart.orderRows || cart.orderRows.length < 1) {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"small-12\">\r\n                        <h2 className=\"checkout__title\">{translate(`checkout.cart.empty`)}</h2>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const { checkout } = this.props,\r\n            { payload, errors = {} } = checkout,\r\n            { orderNote, paymentWidget, paymentMethods, authenticated, isBusinessCustomer, checkoutMode} = payload;\r\n        return (\r\n            <Fragment>\r\n                {(!paymentWidget || paymentWidget.isChangeable) && this.renderCartSection()}\r\n                {(!paymentWidget || paymentWidget.displayCustomerDetails) && this.renderCustomerDetailsSection()}\r\n                {(!paymentWidget || paymentWidget.displayDeliveryMethods) && this.renderDeliveryMethodsSection()}\r\n                {(paymentMethods && paymentMethods.length > 1 && (!paymentWidget || paymentWidget.isChangeable)) && this.renderPaymentMethodsSection()}\r\n                <PaymentWidget {...paymentWidget} verify={this.props.verify} />\r\n\r\n                {!paymentWidget && (\r\n                    <Fragment>\r\n                        <div className=\"row\">\r\n                            <h3 className=\"checkout__section-title\">{translate('checkout.order.title')}</h3>\r\n                        </div>\r\n\r\n                        <section className=\"row checkout-info__container checkout-info__summary\">\r\n                            <CheckoutOrderNote {...orderNote} onChange={(note) => this.props.setOrderNote(note)} />\r\n                            <CheckoutOrderInfo cart={cart} />\r\n                        </section>\r\n\r\n                        <div className=\"row\">\r\n                            <input className=\"checkout-info__checkbox-input\" type=\"checkbox\" id=\"acceptTermsOfCondition\" checked={payload.acceptTermsOfCondition} onChange={(event) => this.props.acceptTermsOfCondition(event.target.checked)} />\r\n                            <label className=\"checkout-info__checkbox-label\" htmlFor=\"acceptTermsOfCondition\">\r\n                                {translate('checkout.terms.acceptTermsOfCondition')} <a className=\"checkout__link\" href={payload.termsUrl} target=\"_blank\">{translate('checkout.terms.link')}</a>\r\n                            </label>\r\n                            {errors['acceptTermsOfCondition'] &&\r\n                                <span className=\"form__validator--error form__validator--top-narrow\" data-error-for=\"acceptTermsOfCondition\">{errors['acceptTermsOfCondition'][0]}</span>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            {!authenticated && (isBusinessCustomer || checkoutMode === constants.checkoutMode.companyCustomers) ?\r\n                                (<button className=\"checkout__submit-button\" onClick={() => location.href = payload.loginUrl} >{translate('checkout.login.to.placeorder')}</button>)\r\n                                : (<button type=\"submit\" className=\"checkout__submit-button\" disabled={checkout.isSubmitting} onClick={() => this.placeOrder()} >{translate('checkout.placeorder')}</button>)\r\n                            }\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n\r\n                <div className=\"row\">\r\n                    {errors && errors['general'] && <p className=\"checkout__validator--error\">{errors['general'][0]}</p>}\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.checkout.result && this.props.checkout.result.redirectUrl) {\r\n            window.location = this.props.checkout.result.redirectUrl;\r\n            return;\r\n        }\r\n\r\n        const { checkout } = this.props;\r\n        if (!checkout.isSubmitting || !checkout.errors) {\r\n            return;\r\n        }\r\n\r\n        const errorKeys = Object.keys(checkout.errors);\r\n        if (!errorKeys || errorKeys.length < 1) {\r\n            return;\r\n        }\r\n\r\n        const errorNode = document.querySelector(`[data-error-for=\"${errorKeys[0]}\"]`);\r\n        if (!errorNode) {\r\n            return;\r\n        }\r\n\r\n        const inputNode = errorNode.parentElement.querySelector('input');\r\n        if (inputNode) {\r\n            setTimeout(() => inputNode.focus(), 1000);\r\n            inputNode.scrollIntoView({ behavior: 'smooth' });\r\n        } else {\r\n            errorNode.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    }\r\n\r\n    renderCartSection() {\r\n        const { checkout } = this.props,\r\n            { errors = {} } = checkout;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"small-12\">\r\n                        <h2 className=\"checkout__title\">{translate('checkout.title')}</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <h3 className=\"checkout__section-title\">{translate('checkout.cart.title')}</h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {errors && errors['cart'] && <p className=\"checkout__validator--error\">{errors['cart'][0]}</p>}\r\n                </div>\r\n                <Cart {...{\r\n                    ...this.props.cart,\r\n                    updateOrderRowQuantity: this.props.updateOrderRowQuantity,\r\n                    removeOrderRow: this.props.removeOrderRow,\r\n                }} />\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    renderCustomerDetailsSection() {\r\n        const { checkout, onCustomerDetailsChange, onSignUpChange, setSelectedCompanyAddress, setCountry } = this.props,\r\n            { payload, errors = {} } = checkout,\r\n            { companyName, authenticated, customerDetails, alternativeAddress, companyAddresses, selectedCompanyAddressId,\r\n                isBusinessCustomer, signUp, checkoutMode } = payload;\r\n        const privateCustomerInfoComponent = <CheckoutPrivateCustomerInfo {...{ customerDetails, alternativeAddress, authenticated, onChange: onCustomerDetailsChange, signUp, onSignUpChange, setCountry, errors }} />;\r\n        const businessCustomerInfoComponent = <CheckoutBusinessCustomerInfo {...{ customerDetails, companyAddresses, companyName, authenticated, selectedCompanyAddressId, onChange: onCustomerDetailsChange, setSelectedCompanyAddress, errors }} />;\r\n        if (!authenticated) {\r\n            return (\r\n                <Fragment>\r\n                    <div className=\"row\">\r\n                        <h3 className=\"checkout__section-title\">{translate('checkout.customerinfo.title')}</h3>\r\n                        <Fragment>\r\n                            <label className=\"checkout__text--in-line\">{translate('checkout.customerinfo.existingcustomer')}</label>&nbsp;\r\n                            <a href={payload.loginUrl} className=\"checkout__link\">{translate('checkout.customerinfo.clicktologin')}</a>&nbsp;\r\n                            {!isBusinessCustomer && checkoutMode === constants.checkoutMode.both && <a onClick={() => this.props.setBusinessCustomer(true)} className=\"checkout__link\">{translate('checkout.customerinfo.businesscustomer')}</a>}\r\n                        </Fragment>\r\n                        {isBusinessCustomer && checkoutMode === constants.checkoutMode.both && <a onClick={() => this.props.setBusinessCustomer(false)} className=\"checkout__link\">{translate('checkout.customerinfo.privatecustomer')}</a>}\r\n                    </div>\r\n                    {!isBusinessCustomer && checkoutMode !== constants.checkoutMode.companyCustomers && privateCustomerInfoComponent}\r\n                    {(isBusinessCustomer || checkoutMode === constants.checkoutMode.companyCustomers) && businessCustomerInfoComponent}\r\n                </Fragment>\r\n            );\r\n        }\r\n        if (isBusinessCustomer) {\r\n            return (\r\n                <Fragment>\r\n                    <div className=\"row\">\r\n                        <h3 className=\"checkout__section-title\">{translate('checkout.customerinfo.title')}</h3>\r\n                    </div>\r\n                    {authenticated && businessCustomerInfoComponent}\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"row\">\r\n                    <h3 className=\"checkout__section-title\">{translate('checkout.customerinfo.title')}</h3>\r\n                </div>\r\n                {privateCustomerInfoComponent}\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    renderDeliveryMethodsSection() {\r\n        const { checkout } = this.props,\r\n            { payload, errors = {} } = checkout,\r\n            { deliveryMethods } = payload;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"row\">\r\n                    <h3 className=\"checkout__section-title\">{translate('checkout.delivery.title')}</h3>\r\n                </div>\r\n                <CheckoutDeliveryMethods deliveryMethods={deliveryMethods} selectedId={payload.selectedDeliveryMethod} onChange={this.props.setDelivery} />\r\n                {errors['selectedDeliveryMethod'] &&\r\n                    <span className=\"form__validator--error form__validator--top-narrow\">{errors['selectedDeliveryMethod'][0]}</span>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    renderPaymentMethodsSection() {\r\n        const { checkout } = this.props,\r\n            { payload, errors = {} } = checkout,\r\n            { paymentMethods } = payload;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"row\">\r\n                    <h3 className=\"checkout__section-title\">{translate('checkout.payment.title')}</h3>\r\n                </div>\r\n                <CheckoutPaymentMethods paymentMethods={paymentMethods} \r\n                    selectedId={payload.selectedPaymentMethod} \r\n                    onChange={this.props.setPayment} \r\n                    errors={errors}\r\n                    onCampaignCodeChange={this.props.setCampaignCode}\r\n                    onSubmitCampaignCode={this.props.submitCampaignCode}/>\r\n                {errors['selectedPaymentMethod'] &&\r\n                    <span className=\"form__validator--error form__validator--top-narrow\">{errors['selectedPaymentMethod'][0]}</span>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const { cart, checkout } = state;\r\n    return {\r\n        cart,\r\n        checkout,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        submit: () => dispatch(submit()),\r\n        setBusinessCustomer: (value) => dispatch(setBusinessCustomer(value)),\r\n        setCampaignCode: (code) => dispatch(setCampaignCode(code)),\r\n        setCountry: (systemId) => dispatch(setCountry(systemId)),\r\n        setDelivery: (systemId) => dispatch(setDelivery(systemId)),\r\n        setPayment: (systemId) => dispatch(setPayment(systemId)),\r\n        setOrderNote: (note) => dispatch(setOrderNote(note)),\r\n        acceptTermsOfCondition: (accept) => dispatch(acceptTermsOfCondition(accept)),\r\n        verify: (url, orderId, payload) => dispatch(verify(url, orderId, payload)),\r\n        onSignUpChange: (signUp) => dispatch(setSignUp(signUp)),\r\n        submitCampaignCode: () => dispatch(submitCampaignCode()),\r\n        submitRequest: () => dispatch(submitRequest()),\r\n        submitError: (error) => {\r\n            dispatch(submitError(error));\r\n            dispatch(submitDone(null));\r\n        },\r\n        setSelectedCompanyAddress: (companyAddressId, country) => {\r\n            dispatch(setSelectedCompanyAddress(companyAddressId));\r\n            dispatch(setCountry(country));\r\n        },\r\n        onCustomerDetailsChange: (stateKey, propName, value) => {\r\n            switch (stateKey) {\r\n                case 'customerDetails':\r\n                    dispatch(setCustomerDetails(propName, value));\r\n                    break;\r\n                case 'alternativeAddress':\r\n                    dispatch(setAlternativeAddress(propName, value));\r\n                    break;\r\n            }\r\n        },\r\n\r\n        updateOrderRowQuantity: (rowId, quantity) => dispatch(updateOrderRowQuantity(rowId, quantity)).then(() => dispatch(reloadPayment())),\r\n        removeOrderRow: (rowId) => dispatch(updateOrderRowQuantity(rowId, 0)).then(() => dispatch(reloadPayment())),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutContainer);"],"sourceRoot":""}